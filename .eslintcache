[{"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/index.tsx":"1","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/reportWebVitals.ts":"2","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/App.tsx":"3","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/index.ts":"4","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Main.tsx":"5","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Navigation/header.tsx":"6","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/PiePlot.tsx":"7","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/piePlotSlice.ts":"8","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/moneyDataSlice.ts":"9","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/totalAmountSlice.ts":"10","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/calendar/slice.ts":"11","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/currentSchedule/slice.ts":"12","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/addSchedule/slice.ts":"13","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarBoard/index.tsx":"14","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Month.tsx":"15","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/TotalAmount.tsx":"16","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/calendar.ts":"17","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/schedule.ts":"18","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/edit.tsx":"19","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/income.tsx":"20","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/index.tsx":"21","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/index.tsx":"22","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarElement/index.tsx":"23","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/income.tsx":"24","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/index.tsx":"25","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData/SwitchButton.tsx":"26","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/EditTable.tsx":"27","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData/MoneyData.tsx":"28","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/incomeEdit.tsx":"29"},{"size":571,"mtime":1612858939573,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1612858858304,"results":"32","hashOfConfig":"31"},{"size":1255,"mtime":1613442961523,"results":"33","hashOfConfig":"31"},{"size":1040,"mtime":1613439459775,"results":"34","hashOfConfig":"31"},{"size":595,"mtime":1613376163507,"results":"35","hashOfConfig":"31"},{"size":1514,"mtime":1613376237918,"results":"36","hashOfConfig":"31"},{"size":2728,"mtime":1613439459774,"results":"37","hashOfConfig":"31"},{"size":2169,"mtime":1612858939574,"results":"38","hashOfConfig":"31"},{"size":3761,"mtime":1613440666959,"results":"39","hashOfConfig":"31"},{"size":2531,"mtime":1613439459775,"results":"40","hashOfConfig":"31"},{"size":692,"mtime":1612862805329,"results":"41","hashOfConfig":"31"},{"size":1600,"mtime":1612943943722,"results":"42","hashOfConfig":"31"},{"size":5943,"mtime":1613440268622,"results":"43","hashOfConfig":"31"},{"size":8321,"mtime":1613446519697,"results":"44","hashOfConfig":"31"},{"size":1105,"mtime":1612859162409,"results":"45","hashOfConfig":"31"},{"size":1052,"mtime":1613439459774,"results":"46","hashOfConfig":"31"},{"size":1981,"mtime":1612860390430,"results":"47","hashOfConfig":"31"},{"size":780,"mtime":1612939977442,"results":"48","hashOfConfig":"31"},{"size":11940,"mtime":1613447081129,"results":"49","hashOfConfig":"31"},{"size":4138,"mtime":1613443039647,"results":"50","hashOfConfig":"31"},{"size":4111,"mtime":1613442346698,"results":"51","hashOfConfig":"31"},{"size":9850,"mtime":1613439515357,"results":"52","hashOfConfig":"31"},{"size":2754,"mtime":1613366646032,"results":"53","hashOfConfig":"31"},{"size":771,"mtime":1613366346866,"results":"54","hashOfConfig":"31"},{"size":775,"mtime":1613366358481,"results":"55","hashOfConfig":"31"},{"size":3977,"mtime":1613441465461,"results":"56","hashOfConfig":"31"},{"size":5786,"mtime":1613441141855,"results":"57","hashOfConfig":"31"},{"size":1779,"mtime":1613439459774,"results":"58","hashOfConfig":"31"},{"size":11744,"mtime":1613447465388,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"mi9w08",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/index.tsx",[],["124","125"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/reportWebVitals.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/App.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/index.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Main.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Navigation/header.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/PiePlot.tsx",["126"],"import React, { useEffect, useState } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDataDaily, fetchDataDaily } from \"../store/piePlotSlice\";\nimport Month from \"../components/Month\";\nimport dayjs from \"dayjs\";\nimport TotalAmount from \"../components/TotalAmount\";\nimport { fetchInitialState, fetchTotalIncome } from \"../store/totalAmountSlice\";\n\nconst PiePlot: React.FC = () => {\n  const dataDaily = useSelector(selectDataDaily);\n  const [amount, setAmount] = useState<Array<number>>([]);\n  const [userNum, setUserNum] = useState(\"abcde\");\n  const [year, setYear] = useState(dayjs().year());\n  const [month, setMonth] = useState(dayjs().month() + 1);\n\n  const onClickPreviousMonth = () => {\n    const day = dayjs(`${year}-${month}`).add(-1, \"month\");\n    setYear(day.year());\n    setMonth(day.month() + 1);\n    setArg({ userNum: userNum, year: day.year(), month: day.month() + 1 });\n  };\n\n  const onClickNextMonth = () => {\n    const day = dayjs(`${year}-${month}`).add(1, \"month\");\n    console.log(day);\n    setYear(day.year());\n    setMonth(day.month() + 1);\n    setArg({ userNum: userNum, year: day.year(), month: day.month() + 1 });\n  };\n\n  const dispatch = useDispatch();\n  const [arg, setArg] = useState<{\n    userNum: string;\n    year: number;\n    month: number;\n  }>({ userNum: userNum, year: year, month: month });\n\n  useEffect(() => {\n    dispatch(fetchDataDaily(arg));\n    dispatch(fetchInitialState(arg));\n    dispatch(fetchTotalIncome(arg));\n  }, [dispatch, arg]);\n\n  //PieChart\n  const createPiePlotData = (amount: Array<number>) => {\n    let data = {\n      labels: [\"Windows\", \"Mac\", \"Linux\"],\n      datasets: [\n        {\n          data: amount,\n          backgroundColor: [\"#4169e1\", \"#ff1493\", \"#FFCE56\"],\n          hoverBackgroundColor: [\"#36A2EB\", \"#FF6384\", \"#FFCE56\"],\n          borderColor: [\"transparent\", \"transparent\", \"transparent\"],\n        },\n      ],\n    };\n    return data;\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: false,\n    legend: { display: true },\n  };\n  const [piePlotData, setPiePlotData] = useState(createPiePlotData(amount));\n\n  useEffect(() => {\n    setAmount(dataDaily);\n  }, [dataDaily]);\n\n  useEffect(() => {\n    setPiePlotData(createPiePlotData(amount));\n  }, [amount]);\n\n  return (\n    <div>\n      <div className=\"inc-exp-container\">\n        <Month\n          onClickNextMonth={onClickNextMonth}\n          onClickPreviousMonth={onClickPreviousMonth}\n          year={arg.year}\n          month={arg.month}\n        />\n        <Pie data={piePlotData} options={options} width={300} height={300} />\n        <TotalAmount />\n      </div>\n    </div>\n  );\n};\n\nexport default PiePlot;\n","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/piePlotSlice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/moneyDataSlice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/totalAmountSlice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/calendar/slice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/currentSchedule/slice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/addSchedule/slice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarBoard/index.tsx",["127","128"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Month.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/TotalAmount.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/calendar.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/schedule.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/edit.tsx",["129","130","131","132","133","134","135","136","137","138","139","140","141"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/income.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/index.tsx",["142"],"import React, { useEffect, useCallback, useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  Input,\n  Grid,\n  Select,\n  MenuItem,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  CategoryOutlined,\n  NoteOutlined,\n  AccessTime,\n  Close,\n} from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport dayjs from \"dayjs\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { fetchMoneyData, postIncome } from \"../../redux/addSchedule/slice\";\nimport { useDispatch } from \"react-redux\";\n\nconst spacer = { margin: \"4px, 0\" };\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  closeButton: {\n    textAlign: \"right\",\n  },\n  expenseButton: {\n    backgroundColor: \"#F08080\",\n  },\n  incomeButton: {\n    backgroundColor: \"rgb(121, 134, 203)\",\n  },\n  saveButton: {\n    backgroundColor: \"#87CEFA\",\n  },\n  button: {\n    backgroundColor: \"#FFFFFF\",\n    color: \"#4169E1\",\n    border: \"1px solid #4169E1\",\n  },\n};\n\nconst Title = withStyles({\n  root: { marginBottom: 32, fontSize: 22 },\n})(Input);\n\ntype Props = { newDate: dayjs.Dayjs; isOpen: boolean; doClose: () => void };\n\nexport type AddItemType = {\n  userNum: string;\n  amount: number;\n  jenre: string;\n  details: string;\n  date: dayjs.Dayjs | null;\n};\n\nexport type AddIncomeType = {\n  userNum: string;\n  income: number;\n  jenre: string;\n  details: string;\n  date: dayjs.Dayjs | null;\n};\n\n//金額入力フォーム\nconst AddScheduleDialog: React.FC<Props> = React.memo(\n  function AddScheduleDialog(props) {\n    const { newDate, isOpen, doClose } = props;\n\n    const [amount, setAmount] = useState(0);\n    const [expenseJenre, setExpenseJenre] = useState(\"食費\");\n    const [incomeJenre, setIncomeJenre] = useState(\"給料\");\n    const [details, setDetails] = useState(\"\");\n    const [date, setDate] = useState<dayjs.Dayjs | null>(dayjs());\n    const [userNum, seUserNum] = useState<string>(\"abc\");\n    const [dialogStatus, setDialogStatus] = useState(true);\n    const [select, setSelect] = useState(\n      <Grid item xs={10}>\n        <Select\n          value={expenseJenre}\n          onChange={(e) => {\n            handleExpenseJenreValue(e.target.value as string);\n          }}\n          fullWidth\n          autoFocus\n        >\n          <MenuItem value=\"食費\">食費</MenuItem>\n          <MenuItem value=\"日用品\">日用品</MenuItem>\n          <MenuItem value=\"衣服\">衣服</MenuItem>\n          <MenuItem value=\"交通費\">交通費</MenuItem>\n          <MenuItem value=\"その他\">その他</MenuItem>\n        </Select>\n      </Grid>\n    );\n\n    useEffect(() => {\n      setDate(newDate);\n    }, [newDate]);\n\n    //金額をセット\n    const handleAmountValue = (value: string) => {\n      setAmount(Number(value));\n    };\n    //カテゴリーをセット\n    const handleExpenseJenreValue = (value: string) => {\n      setExpenseJenre(value);\n    };\n    const handleIncomeJenreValue = (value: string) => {\n      setIncomeJenre(value);\n    };\n    //メモをセット\n    const handleDetailsValue = (value: string) => {\n      setDetails(value);\n    };\n    // //日付をセット\n    const handleDateValue = (value: Date | null) => {\n      let newDay = null;\n      if (value != null) {\n        newDay = dayjs(value);\n      }\n      setDate(newDay);\n    };\n\n    const handleChangeExpense = useCallback(() => {\n      setDialogStatus(true);\n      setSelect(\n        <Grid item xs={10}>\n          <Select\n            value={expenseJenre}\n            onChange={(e) => {\n              handleExpenseJenreValue(e.target.value as string);\n            }}\n            fullWidth\n            autoFocus\n          >\n            <MenuItem value=\"食費\">食費</MenuItem>\n            <MenuItem value=\"日用品\">日用品</MenuItem>\n            <MenuItem value=\"衣服\">衣服</MenuItem>\n            <MenuItem value=\"交通費\">交通費</MenuItem>\n            <MenuItem value=\"その他\">その他</MenuItem>\n          </Select>\n        </Grid>\n      );\n    }, [expenseJenre]);\n\n    const handleChangeIncome = useCallback(() => {\n      setDialogStatus(false);\n      setSelect(\n        <Grid item xs={10}>\n          <Select\n            value={incomeJenre}\n            onChange={(e) => {\n              handleIncomeJenreValue(e.target.value as string);\n            }}\n            fullWidth\n            autoFocus\n          >\n            <MenuItem value=\"給料\">給料</MenuItem>\n            <MenuItem value=\"その他\">その他</MenuItem>\n          </Select>\n        </Grid>\n      );\n    }, [incomeJenre]);\n\n    const [arg, setArg] = useState<AddItemType>({\n      userNum: \"\",\n      amount: 0,\n      jenre: \"\",\n      details: \"\",\n      date: dayjs(),\n    });\n\n    const [argIncome, setArgIncome] = useState<AddIncomeType>({\n      userNum: \"\",\n      income: 0,\n      jenre: \"\",\n      details: \"\",\n      date: dayjs(),\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      if (date != null && dialogStatus === true) {\n        setArg({\n          userNum: userNum,\n          amount: amount,\n          jenre: expenseJenre,\n          details: details,\n          date: date,\n        });\n      } else {\n        setArgIncome({\n          userNum: userNum,\n          income: amount,\n          jenre: incomeJenre,\n          details: details,\n          date: date,\n        });\n      }\n    }, [\n      userNum,\n      amount,\n      expenseJenre,\n      details,\n      date,\n      incomeJenre,\n      dialogStatus,\n    ]);\n\n    const handleSaveData = () => {\n      if (dialogStatus) {\n        dispatch(fetchMoneyData(arg));\n      } else {\n        dispatch(postIncome(argIncome));\n      }\n\n      doClose();\n\n      setAmount(0);\n      setExpenseJenre(\"食費\");\n      setIncomeJenre(\"給料\");\n      setDetails(\"\");\n      setDate(newDate);\n    };\n\n    const handleClose = () => {\n      setDialogStatus(true);\n\n      doClose();\n\n      setAmount(0);\n      setExpenseJenre(\"食費\");\n      setIncomeJenre(\"給料\");\n      setDetails(\"\");\n      setDate(newDate);\n      setSelect(\n        <Grid item xs={10}>\n          <Select\n            value={expenseJenre}\n            onChange={(e) => {\n              handleExpenseJenreValue(e.target.value as string);\n            }}\n            fullWidth\n            autoFocus\n          >\n            <MenuItem value=\"食費\">食費</MenuItem>\n            <MenuItem value=\"日用品\">日用品</MenuItem>\n            <MenuItem value=\"衣服\">衣服</MenuItem>\n            <MenuItem value=\"交通費\">交通費</MenuItem>\n            <MenuItem value=\"その他\">その他</MenuItem>\n          </Select>\n        </Grid>\n      );\n    };\n\n    // if (process.env.NODE_ENV !== \"production\") {\n    //   const { whyDidYouUpdate } = require(\"why-did-you-update\");\n    //   whyDidYouUpdate(React);\n    // }\n    return (\n      <Dialog open={isOpen} onClose={handleClose} maxWidth=\"xs\" fullWidth>\n        <DialogActions>\n          <div style={styles.closeButton}>\n            <IconButton onClick={handleClose} size=\"small\">\n              <Close />\n            </IconButton>\n          </div>\n        </DialogActions>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              style={dialogStatus ? styles.expenseButton : styles.button}\n              onClick={() => handleChangeExpense()}\n            >\n              支出\n            </Button>\n            <Button\n              variant=\"outlined\"\n              style={dialogStatus ? styles.button : styles.incomeButton}\n              onClick={() => handleChangeIncome()}\n            >\n              収入\n            </Button>\n          </Grid>\n        </Grid>\n        <DialogContent>\n          <Title\n            autoFocus\n            fullWidth\n            placeholder=\"金額\"\n            value={amount}\n            onChange={(e) => {\n              handleAmountValue(e.target.value);\n            }}\n          />\n          <Grid\n            container\n            spacing={1}\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <CategoryOutlined />\n            </Grid>\n            {select}\n          </Grid>\n          <Grid\n            container\n            spacing={1}\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <NoteOutlined />\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                style={spacer}\n                fullWidth\n                placeholder=\"メモ\"\n                value={details}\n                onChange={(e) => {\n                  handleDetailsValue(e.target.value);\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            spacing={1}\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <AccessTime />\n            </Grid>\n            <Grid item xs={10}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DatePicker\n                  value={date}\n                  onChange={(d) => handleDateValue(d)}\n                  variant=\"inline\"\n                  format=\"yyyy年M月d日\"\n                  animateYearScrolling\n                  disableToolbar\n                  fullWidth\n                  style={spacer}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            style={styles.saveButton}\n            variant=\"outlined\"\n            onClick={() => handleSaveData()}\n          >\n            保存\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n);\n\nexport default AddScheduleDialog;\n","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarElement/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/income.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData/SwitchButton.tsx",["143","144","145"],"import React, { useState, useMemo, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectIncomeData, selectMoneyData } from \"../../store/moneyDataSlice\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport MaterialTable from \"material-table\";\nimport EditTable from \"../EditTable\";\nimport dayjs from \"dayjs\";\nimport { ItemType } from \"../../redux/addSchedule/slice\";\nimport { EditItemType } from \"../../components/AddScheduleDialog/edit\";\n\nconst SwitchButton: React.FC = () => {\n  const moneyData = useSelector(selectMoneyData);\n  const incomeData = useSelector(selectIncomeData);\n  const [money, setMoney] = useState<Array<object>>([]);\n  const [income, setIncome] = useState<Array<object>>([]);\n  const [changeDate, setChangeDate] = useState<dayjs.Dayjs | null>(dayjs());\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [userNum, setUserNum] = useState(\"abc\");\n  const [moneyInfo, setMoneyInfo] = useState<EditItemType>({\n    userNum: \"abcde\",\n    moneyId: 0,\n    amount: 0,\n    jenre: \"\",\n    date: dayjs(),\n    details: \"\",\n  });\n\n  const dataList = useMemo(() => {\n    const moneyDataList: Array<ItemType> = [];\n    for (var i of moneyData) {\n      const data: ItemType = {\n        moneyId: i.moneyId,\n        userNum: i.userNum,\n        amount: i.amount,\n        jenre: i.jenre,\n        date: i.date,\n        details: i.details,\n      };\n      moneyDataList.push(data);\n    }\n    return moneyDataList;\n  }, [moneyData]);\n\n  const incomeList = useMemo(() => {\n    const incomeDataList: Array<ItemType> = [];\n    for (var i of incomeData) {\n      const data: ItemType = {\n        moneyId: i.moneyId,\n        userNum: i.userNum,\n        amount: i.amount,\n        jenre: i.jenre,\n        date: i.date,\n        details: i.details,\n      };\n      incomeDataList.push(data);\n    }\n    return incomeDataList;\n  }, [incomeData]);\n\n  useEffect(() => {\n    setMoney(dataList);\n    setIncome(incomeList);\n  }, [dataList, incomeList]);\n\n  //ダイアログを表示させるメソッド\n  const onClickOpen = (rowData: EditItemType) => {\n    setDialogOpen(true);\n    setMoneyInfo(rowData);\n  };\n\n  const handleClose = () => {\n    setDialogOpen(false);\n  };\n\n  return (\n    <div>\n      <Tabs>\n        <TabList>\n          <Tab>支出</Tab>\n          <Tab>収入</Tab>\n        </TabList>\n        <TabPanel>\n          <MaterialTable\n            title={\"支出一覧\"}\n            columns={[\n              { title: \"日付\", field: \"date\" },\n              { title: \"ジャンル\", field: \"jenre\" },\n              { title: \"価格(円)\", field: \"amount\" },\n              { title: \"詳細\", field: \"details\" },\n            ]}\n            data={money}\n            actions={[\n              {\n                icon: \"edit\",\n                tooltip: \"Edit Item\",\n                onClick: (_, rowData) => {\n                  onClickOpen(rowData as EditItemType);\n                },\n              },\n            ]}\n          />\n        </TabPanel>\n        <TabPanel>\n          <MaterialTable\n            title={\"収入一覧\"}\n            columns={[\n              { title: \"日付\", field: \"date\" },\n              { title: \"ジャンル\", field: \"jenre\" },\n              { title: \"価格(円)\", field: \"amount\" },\n              { title: \"詳細\", field: \"details\" },\n            ]}\n            data={income}\n            actions={[\n              {\n                icon: \"edit\",\n                tooltip: \"Edit Item\",\n                onClick: (_, rowData) => {\n                  alert(\"Open edit page of \" + (rowData as any).itemName + \".\");\n                  console.log(\"rowData\", rowData);\n                },\n              },\n            ]}\n          />\n        </TabPanel>\n      </Tabs>\n      <EditTable\n        newDate={changeDate}\n        isOpen={dialogOpen}\n        doClose={() => handleClose()}\n        moneyInfo={moneyInfo}\n      ></EditTable>\n    </div>\n  );\n};\nexport default SwitchButton;\n","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/EditTable.tsx",["146","147","148","149","150"],"import React, { useEffect, useState, useMemo } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  Input,\n  Grid,\n  Select,\n  MenuItem,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  CategoryOutlined,\n  NoteOutlined,\n  AccessTime,\n  Close,\n} from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport dayjs from \"dayjs\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ItemType } from \"../redux/addSchedule/slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUpdateData, selectMoneyData } from \"../store/moneyDataSlice\";\nimport { EditItemType } from \"../components/AddScheduleDialog/edit\";\nconst spacer = { margin: \"4px, 0\" };\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  closeButton: {\n    textAlign: \"right\",\n  },\n};\n\nconst Title = withStyles({\n  root: { marginBottom: 32, fontSize: 22 },\n})(Input);\n\ntype Props = {\n  newDate: dayjs.Dayjs | null;\n  isOpen: boolean;\n  doClose: () => void;\n  moneyInfo: EditItemType;\n};\n\nconst EditTable: React.FC<Props> = (props) => {\n  const { isOpen, doClose, moneyInfo } = props;\n  const [moneyId, setMoneyId] = useState(moneyInfo.moneyId);\n  const [amount, setAmount] = useState(moneyInfo.amount);\n  const [jenre, setJenre] = useState(moneyInfo.jenre);\n  const [details, setDetails] = useState(moneyInfo.details);\n  const [date, setDate] = useState<dayjs.Dayjs | null>(moneyInfo.date);\n  const [userNum, seUserNum] = useState<string>(\"abcde\");\n\n  useEffect(() => {\n    setMoneyId(moneyInfo.moneyId);\n    setAmount(moneyInfo.amount);\n    setJenre(moneyInfo.jenre);\n    setDetails(moneyInfo.details);\n    setDate(moneyInfo.date);\n  }, [\n    moneyInfo.amount,\n    moneyInfo.jenre,\n    moneyInfo.details,\n    moneyInfo.date,\n    moneyInfo.moneyId,\n  ]);\n\n  //金額をセット\n  const handleAmountValue = (value: string) => {\n    setAmount(Number(value));\n  };\n  //カテゴリーをセット\n  const handleJenreValue = (value: string) => {\n    setJenre(value);\n  };\n  //メモをセット\n  const handleDetailsValue = (value: string) => {\n    setDetails(value);\n  };\n  // //日付をセット\n  const handleDateValue = (value: Date | null) => {\n    let newDay = null;\n    if (value != null) {\n      newDay = dayjs(value);\n    }\n    setDate(newDay);\n  };\n\n  const [arg, setArg] = useState<EditItemType>({\n    moneyId: 0,\n    userNum: \"\",\n    amount: 0,\n    jenre: \"\",\n    details: \"\",\n    date: dayjs(),\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (date != null) {\n      setArg({\n        moneyId: moneyId,\n        userNum: userNum,\n        amount: amount,\n        jenre: jenre,\n        details: details,\n        date: date,\n      });\n    }\n  }, [moneyId, userNum, amount, jenre, details, date]);\n\n  const handleSaveData = () => {\n    setArg({\n      moneyId: moneyId,\n      userNum: userNum,\n      amount: amount,\n      jenre: jenre,\n      details: details,\n      date: date!,\n    });\n    console.log(\"arg\", arg);\n    dispatch(fetchUpdateData(arg));\n\n    doClose();\n  };\n\n  return (\n    <Dialog open={isOpen} onClose={doClose} maxWidth=\"xs\" fullWidth>\n      <DialogActions>\n        <div style={styles.closeButton}>\n          <IconButton onClick={doClose} size=\"small\">\n            <Close />\n          </IconButton>\n        </div>\n      </DialogActions>\n      <DialogContent>\n        <Title\n          autoFocus\n          fullWidth\n          placeholder=\"金額\"\n          value={amount}\n          onChange={(e) => {\n            handleAmountValue(e.target.value);\n          }}\n        />\n        <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <CategoryOutlined />\n          </Grid>\n          <Grid item xs={10}>\n            <Select\n              value={jenre}\n              onChange={(e) => {\n                handleJenreValue(e.target.value as string);\n              }}\n              fullWidth\n              autoFocus\n            >\n              <MenuItem value=\"食費\">食費</MenuItem>\n              <MenuItem value=\"日用品\">日用品</MenuItem>\n              <MenuItem value=\"衣服\">衣服</MenuItem>\n              <MenuItem value=\"交通費\">交通費</MenuItem>\n              <MenuItem value=\"その他\">その他</MenuItem>\n            </Select>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <NoteOutlined />\n          </Grid>\n          <Grid item xs={10}>\n            <TextField\n              style={spacer}\n              fullWidth\n              placeholder=\"メモ\"\n              value={details}\n              onChange={(e) => {\n                handleDetailsValue(e.target.value);\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <AccessTime />\n          </Grid>\n          <Grid item xs={10}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                value={date}\n                onChange={(d) => handleDateValue(d)}\n                variant=\"inline\"\n                format=\"yyyy年M月d日\"\n                animateYearScrolling\n                disableToolbar\n                fullWidth\n                style={spacer}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => handleSaveData()}\n        >\n          保存\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditTable;\n","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData/MoneyData.tsx",["151"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import { selectMoneyData } from \"../../store/moneyDataSlice\";\nimport { fetchIncomeData, fetchMoneyData } from \"../../store/moneyDataSlice\";\nimport dayjs from \"dayjs\";\nimport Month from \"../Month\";\nimport SwitchButton from \"./SwitchButton\";\n// type MoneyInfo = { amount: number; jenre: string; date: Date; details: string };\n\nconst MoneyData: React.FC = () => {\n  // const moneyData = useSelector(selectMoneyData);\n  const [userNum, setUserNum] = useState(\"abcde\");\n  const [year, setYear] = useState(dayjs().year());\n  const [month, setMonth] = useState(dayjs().month() + 1);\n  const [arg, setArg] = useState<{\n    userNum: string;\n    year: number;\n    month: number;\n  }>({ userNum: userNum, year: year, month: month });\n\n  const onClickPreviousMonth = () => {\n    const day = dayjs(`${year}-${month}`).add(-1, \"month\");\n    setYear(day.year());\n    setMonth(day.month() + 1);\n    setArg({ userNum: userNum, year: day.year(), month: day.month() + 1 });\n  };\n\n  const onClickNextMonth = () => {\n    const day = dayjs(`${year}-${month}`).add(1, \"month\");\n    setYear(day.year());\n    setMonth(day.month() + 1);\n    setArg({ userNum: userNum, year: day.year(), month: day.month() + 1 });\n  };\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchMoneyData(arg));\n    dispatch(fetchIncomeData(arg));\n  }, [dispatch, arg]);\n\n  return (\n    <div>\n      <div className=\"inc-exp-container\">\n        <Month\n          onClickNextMonth={onClickNextMonth}\n          onClickPreviousMonth={onClickPreviousMonth}\n          year={arg.year}\n          month={arg.month}\n        />\n      </div>\n      <SwitchButton></SwitchButton>\n    </div>\n  );\n};\n\nexport default MoneyData;\n","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/incomeEdit.tsx",["152","153","154","155","156","157","158","159","160","161","162","163","164"],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":13,"column":19,"nodeType":"171","messageId":"172","endLine":13,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":94,"column":19,"nodeType":"171","messageId":"172","endLine":94,"endColumn":29},{"ruleId":"173","severity":1,"message":"174","line":125,"column":5,"nodeType":"175","endLine":125,"endColumn":7,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"177","line":26,"column":3,"nodeType":"171","messageId":"172","endLine":26,"endColumn":13},{"ruleId":"169","severity":1,"message":"178","line":27,"column":3,"nodeType":"171","messageId":"172","endLine":27,"endColumn":13},{"ruleId":"169","severity":1,"message":"179","line":30,"column":23,"nodeType":"171","messageId":"172","endLine":30,"endColumn":34},{"ruleId":"169","severity":1,"message":"180","line":32,"column":3,"nodeType":"171","messageId":"172","endLine":32,"endColumn":24},{"ruleId":"169","severity":1,"message":"181","line":33,"column":3,"nodeType":"171","messageId":"172","endLine":33,"endColumn":22},{"ruleId":"169","severity":1,"message":"182","line":35,"column":10,"nodeType":"171","messageId":"172","endLine":35,"endColumn":25},{"ruleId":"169","severity":1,"message":"183","line":35,"column":27,"nodeType":"171","messageId":"172","endLine":35,"endColumn":39},{"ruleId":"169","severity":1,"message":"184","line":100,"column":19,"nodeType":"171","messageId":"172","endLine":100,"endColumn":28},{"ruleId":"169","severity":1,"message":"185","line":103,"column":20,"nodeType":"171","messageId":"172","endLine":103,"endColumn":31},{"ruleId":"173","severity":1,"message":"186","line":155,"column":6,"nodeType":"175","endLine":155,"endColumn":30,"suggestions":"187"},{"ruleId":"169","severity":1,"message":"188","line":233,"column":10,"nodeType":"171","messageId":"172","endLine":233,"endColumn":19},{"ruleId":"173","severity":1,"message":"189","line":266,"column":6,"nodeType":"175","endLine":266,"endColumn":79,"suggestions":"190"},{"ruleId":"173","severity":1,"message":"191","line":339,"column":6,"nodeType":"175","endLine":339,"endColumn":51,"suggestions":"192"},{"ruleId":"169","severity":1,"message":"184","line":81,"column":21,"nodeType":"171","messageId":"172","endLine":81,"endColumn":30},{"ruleId":"169","severity":1,"message":"193","line":17,"column":22,"nodeType":"171","messageId":"172","endLine":17,"endColumn":35},{"ruleId":"169","severity":1,"message":"194","line":19,"column":10,"nodeType":"171","messageId":"172","endLine":19,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":19,"column":19,"nodeType":"171","messageId":"172","endLine":19,"endColumn":29},{"ruleId":"169","severity":1,"message":"195","line":1,"column":38,"nodeType":"171","messageId":"172","endLine":1,"endColumn":45},{"ruleId":"169","severity":1,"message":"196","line":24,"column":10,"nodeType":"171","messageId":"172","endLine":24,"endColumn":18},{"ruleId":"169","severity":1,"message":"179","line":25,"column":23,"nodeType":"171","messageId":"172","endLine":25,"endColumn":34},{"ruleId":"169","severity":1,"message":"197","line":26,"column":27,"nodeType":"171","messageId":"172","endLine":26,"endColumn":42},{"ruleId":"169","severity":1,"message":"184","line":54,"column":19,"nodeType":"171","messageId":"172","endLine":54,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":12,"column":19,"nodeType":"171","messageId":"172","endLine":12,"endColumn":29},{"ruleId":"169","severity":1,"message":"178","line":27,"column":3,"nodeType":"171","messageId":"172","endLine":27,"endColumn":13},{"ruleId":"169","severity":1,"message":"196","line":28,"column":3,"nodeType":"171","messageId":"172","endLine":28,"endColumn":11},{"ruleId":"169","severity":1,"message":"179","line":30,"column":23,"nodeType":"171","messageId":"172","endLine":30,"endColumn":34},{"ruleId":"169","severity":1,"message":"180","line":32,"column":3,"nodeType":"171","messageId":"172","endLine":32,"endColumn":24},{"ruleId":"169","severity":1,"message":"181","line":33,"column":3,"nodeType":"171","messageId":"172","endLine":33,"endColumn":22},{"ruleId":"169","severity":1,"message":"182","line":35,"column":10,"nodeType":"171","messageId":"172","endLine":35,"endColumn":25},{"ruleId":"169","severity":1,"message":"183","line":35,"column":27,"nodeType":"171","messageId":"172","endLine":35,"endColumn":39},{"ruleId":"169","severity":1,"message":"184","line":104,"column":19,"nodeType":"171","messageId":"172","endLine":104,"endColumn":28},{"ruleId":"169","severity":1,"message":"185","line":107,"column":20,"nodeType":"171","messageId":"172","endLine":107,"endColumn":31},{"ruleId":"173","severity":1,"message":"186","line":156,"column":6,"nodeType":"175","endLine":156,"endColumn":42,"suggestions":"198"},{"ruleId":"169","severity":1,"message":"188","line":236,"column":10,"nodeType":"171","messageId":"172","endLine":236,"endColumn":19},{"ruleId":"173","severity":1,"message":"189","line":269,"column":6,"nodeType":"175","endLine":269,"endColumn":79,"suggestions":"199"},{"ruleId":"173","severity":1,"message":"200","line":339,"column":6,"nodeType":"175","endLine":339,"endColumn":51,"suggestions":"201"},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"@typescript-eslint/no-unused-vars","'setUserNum' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["204"],"'IncomeType' is defined but never used.","'postIncome' is defined but never used.","'useSelector' is defined but never used.","'selectCurrentSchedule' is defined but never used.","'selectCurrentIncome' is defined but never used.","'selectSchedules' is defined but never used.","'selectIncome' is defined but never used.","'seUserNum' is assigned a value but never used.","'setIncomeId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newData'. Either include it or remove the dependency array.",["205"],"'argIncome' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'incomeId' and 'moneyId'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setArg' needs the current value of 'moneyId'.",["206"],"React Hook useCallback has an unnecessary dependency: 'incomeJenre'. Either exclude it or remove the dependency array.",["207"],"'setChangeDate' is assigned a value but never used.","'userNum' is assigned a value but never used.","'useMemo' is defined but never used.","'ItemType' is defined but never used.","'selectMoneyData' is defined but never used.",["208"],["209"],"React Hook useCallback has unnecessary dependencies: 'expenseJenre' and 'incomeJenre'. Either exclude them or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"215","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [dispatch]",{"range":"224","text":"225"},"Update the dependencies array to be: [currentData, ArrayData, newData]",{"range":"226","text":"227"},"Update the dependencies array to be: [userNum, amount, expenseJenre, details, date, incomeJenre, dialogStatus, moneyId, incomeId]",{"range":"228","text":"229"},"Update the dependencies array to be: [doClose, expenseJenre, newData]",{"range":"230","text":"231"},"Update the dependencies array to be: [currentIncomeData, ArrayIncomeData, newData]",{"range":"232","text":"233"},{"range":"234","text":"229"},"Update the dependencies array to be: [doClose, newData]",{"range":"235","text":"236"},[3551,3553],"[dispatch]",[3993,4017],"[currentData, ArrayData, newData]",[6552,6625],"[userNum, amount, expenseJenre, details, date, incomeJenre, dialogStatus, moneyId, incomeId]",[8589,8634],"[doClose, expenseJenre, newData]",[3929,3965],"[currentIncomeData, ArrayIncomeData, newData]",[6573,6646],[8448,8493],"[doClose, newData]"]