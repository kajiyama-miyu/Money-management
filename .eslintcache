[{"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/App.tsx":"1","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Navigation/header.tsx":"2","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/index.tsx":"3","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/index.tsx":"4","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/reportWebVitals.ts":"5","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/index.ts":"6","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/PiePlot.tsx":"7","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Main.tsx":"8","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/piePlotSlice.ts":"9","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/moneyDataSlice.ts":"10","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/calendar/slice.ts":"11","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/addSchedule/slice.ts":"12","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/currentSchedule/slice.ts":"13","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarBoard/index.tsx":"14","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData.tsx":"15","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Month.tsx":"16","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/calendar.ts":"17","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/schedule.ts":"18","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/index.tsx":"19","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/income.tsx":"20","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarElement/index.tsx":"21","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/income.tsx":"22","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/index.tsx":"23","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/edit.tsx":"24"},{"size":831,"mtime":1613370899563,"results":"25","hashOfConfig":"26"},{"size":1514,"mtime":1613376237918,"results":"27","hashOfConfig":"26"},{"size":9850,"mtime":1613374994060,"results":"28","hashOfConfig":"26"},{"size":571,"mtime":1612858939573,"results":"29","hashOfConfig":"26"},{"size":425,"mtime":1612858858304,"results":"30","hashOfConfig":"26"},{"size":953,"mtime":1612862944025,"results":"31","hashOfConfig":"26"},{"size":2619,"mtime":1612858939573,"results":"32","hashOfConfig":"26"},{"size":595,"mtime":1613376163507,"results":"33","hashOfConfig":"26"},{"size":2169,"mtime":1612858939574,"results":"34","hashOfConfig":"26"},{"size":2241,"mtime":1612858939574,"results":"35","hashOfConfig":"26"},{"size":692,"mtime":1612862805329,"results":"36","hashOfConfig":"26"},{"size":5946,"mtime":1613381326295,"results":"37","hashOfConfig":"26"},{"size":1600,"mtime":1612943943722,"results":"38","hashOfConfig":"26"},{"size":7523,"mtime":1613378226344,"results":"39","hashOfConfig":"26"},{"size":1388,"mtime":1612858939572,"results":"40","hashOfConfig":"26"},{"size":1105,"mtime":1612859162409,"results":"41","hashOfConfig":"26"},{"size":1981,"mtime":1612860390430,"results":"42","hashOfConfig":"26"},{"size":780,"mtime":1612939977442,"results":"43","hashOfConfig":"26"},{"size":4111,"mtime":1613366226642,"results":"44","hashOfConfig":"26"},{"size":3922,"mtime":1613376018541,"results":"45","hashOfConfig":"26"},{"size":2754,"mtime":1613366646032,"results":"46","hashOfConfig":"26"},{"size":771,"mtime":1613366346866,"results":"47","hashOfConfig":"26"},{"size":775,"mtime":1613366358481,"results":"48","hashOfConfig":"26"},{"size":14583,"mtime":1613380905786,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"mi9w08",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/App.tsx",[],["101","102"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Navigation/header.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/index.tsx",["103"],"import React, { useEffect, useCallback, useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  Input,\n  Grid,\n  Select,\n  MenuItem,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  CategoryOutlined,\n  NoteOutlined,\n  AccessTime,\n  Close,\n} from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport dayjs from \"dayjs\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { fetchMoneyData, postIncome } from \"../../redux/addSchedule/slice\";\nimport { useDispatch } from \"react-redux\";\n\nconst spacer = { margin: \"4px, 0\" };\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  closeButton: {\n    textAlign: \"right\",\n  },\n  expenseButton: {\n    backgroundColor: \"#F08080\",\n  },\n  incomeButton: {\n    backgroundColor: \"rgb(121, 134, 203)\",\n  },\n  saveButton: {\n    backgroundColor: \"#87CEFA\",\n  },\n  button: {\n    backgroundColor: \"#FFFFFF\",\n    color: \"#4169E1\",\n    border: \"1px solid #4169E1\",\n  },\n};\n\nconst Title = withStyles({\n  root: { marginBottom: 32, fontSize: 22 },\n})(Input);\n\ntype Props = { newDate: dayjs.Dayjs; isOpen: boolean; doClose: () => void };\n\nexport type AddItemType = {\n  userNum: string;\n  amount: number;\n  jenre: string;\n  details: string;\n  date: dayjs.Dayjs | null;\n};\n\nexport type AddIncomeType = {\n  userNum: string;\n  income: number;\n  jenre: string;\n  details: string;\n  date: dayjs.Dayjs | null;\n};\n\n//金額入力フォーム\nconst AddScheduleDialog: React.FC<Props> = React.memo(\n  function AddScheduleDialog(props) {\n    const { newDate, isOpen, doClose } = props;\n\n    const [amount, setAmount] = useState(0);\n    const [expenseJenre, setExpenseJenre] = useState(\"食費\");\n    const [incomeJenre, setIncomeJenre] = useState(\"給料\");\n    const [details, setDetails] = useState(\"\");\n    const [date, setDate] = useState<dayjs.Dayjs | null>(dayjs());\n    const [userNum, seUserNum] = useState<string>(\"abc\");\n    const [dialogStatus, setDialogStatus] = useState(true);\n    const [select, setSelect] = useState(\n      <Grid item xs={10}>\n        <Select\n          value={expenseJenre}\n          onChange={(e) => {\n            handleExpenseJenreValue(e.target.value as string);\n          }}\n          fullWidth\n          autoFocus\n        >\n          <MenuItem value=\"食費\">食費</MenuItem>\n          <MenuItem value=\"日用品\">日用品</MenuItem>\n          <MenuItem value=\"衣服\">衣服</MenuItem>\n          <MenuItem value=\"交通費\">交通費</MenuItem>\n          <MenuItem value=\"その他\">その他</MenuItem>\n        </Select>\n      </Grid>\n    );\n\n    useEffect(() => {\n      setDate(newDate);\n    }, [newDate]);\n\n    //金額をセット\n    const handleAmountValue = (value: string) => {\n      setAmount(Number(value));\n    };\n    //カテゴリーをセット\n    const handleExpenseJenreValue = (value: string) => {\n      setExpenseJenre(value);\n    };\n    const handleIncomeJenreValue = (value: string) => {\n      setIncomeJenre(value);\n    };\n    //メモをセット\n    const handleDetailsValue = (value: string) => {\n      setDetails(value);\n    };\n    // //日付をセット\n    const handleDateValue = (value: Date | null) => {\n      let newDay = null;\n      if (value != null) {\n        newDay = dayjs(value);\n      }\n      setDate(newDay);\n    };\n\n    const handleChangeExpense = useCallback(() => {\n      setDialogStatus(true);\n      setSelect(\n        <Grid item xs={10}>\n          <Select\n            value={expenseJenre}\n            onChange={(e) => {\n              handleExpenseJenreValue(e.target.value as string);\n            }}\n            fullWidth\n            autoFocus\n          >\n            <MenuItem value=\"食費\">食費</MenuItem>\n            <MenuItem value=\"日用品\">日用品</MenuItem>\n            <MenuItem value=\"衣服\">衣服</MenuItem>\n            <MenuItem value=\"交通費\">交通費</MenuItem>\n            <MenuItem value=\"その他\">その他</MenuItem>\n          </Select>\n        </Grid>\n      );\n    }, [expenseJenre]);\n\n    const handleChangeIncome = useCallback(() => {\n      setDialogStatus(false);\n      setSelect(\n        <Grid item xs={10}>\n          <Select\n            value={incomeJenre}\n            onChange={(e) => {\n              handleIncomeJenreValue(e.target.value as string);\n            }}\n            fullWidth\n            autoFocus\n          >\n            <MenuItem value=\"給料\">給料</MenuItem>\n            <MenuItem value=\"その他\">その他</MenuItem>\n          </Select>\n        </Grid>\n      );\n    }, [incomeJenre]);\n\n    const [arg, setArg] = useState<AddItemType>({\n      userNum: \"\",\n      amount: 0,\n      jenre: \"\",\n      details: \"\",\n      date: dayjs(),\n    });\n\n    const [argIncome, setArgIncome] = useState<AddIncomeType>({\n      userNum: \"\",\n      income: 0,\n      jenre: \"\",\n      details: \"\",\n      date: dayjs(),\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      if (date != null && dialogStatus === true) {\n        setArg({\n          userNum: userNum,\n          amount: amount,\n          jenre: expenseJenre,\n          details: details,\n          date: date,\n        });\n      } else {\n        setArgIncome({\n          userNum: userNum,\n          income: amount,\n          jenre: incomeJenre,\n          details: details,\n          date: date,\n        });\n      }\n    }, [\n      userNum,\n      amount,\n      expenseJenre,\n      details,\n      date,\n      incomeJenre,\n      dialogStatus,\n    ]);\n\n    const handleSaveData = () => {\n      if (dialogStatus) {\n        dispatch(fetchMoneyData(arg));\n      } else {\n        dispatch(postIncome(argIncome));\n      }\n\n      doClose();\n\n      setAmount(0);\n      setExpenseJenre(\"食費\");\n      setIncomeJenre(\"給料\");\n      setDetails(\"\");\n      setDate(newDate);\n    };\n\n    const handleClose = () => {\n      setDialogStatus(true);\n\n      doClose();\n\n      setAmount(0);\n      setExpenseJenre(\"食費\");\n      setIncomeJenre(\"給料\");\n      setDetails(\"\");\n      setDate(newDate);\n      setSelect(\n        <Grid item xs={10}>\n          <Select\n            value={expenseJenre}\n            onChange={(e) => {\n              handleExpenseJenreValue(e.target.value as string);\n            }}\n            fullWidth\n            autoFocus\n          >\n            <MenuItem value=\"食費\">食費</MenuItem>\n            <MenuItem value=\"日用品\">日用品</MenuItem>\n            <MenuItem value=\"衣服\">衣服</MenuItem>\n            <MenuItem value=\"交通費\">交通費</MenuItem>\n            <MenuItem value=\"その他\">その他</MenuItem>\n          </Select>\n        </Grid>\n      );\n    };\n\n    // if (process.env.NODE_ENV !== \"production\") {\n    //   const { whyDidYouUpdate } = require(\"why-did-you-update\");\n    //   whyDidYouUpdate(React);\n    // }\n    return (\n      <Dialog open={isOpen} onClose={handleClose} maxWidth=\"xs\" fullWidth>\n        <DialogActions>\n          <div style={styles.closeButton}>\n            <IconButton onClick={handleClose} size=\"small\">\n              <Close />\n            </IconButton>\n          </div>\n        </DialogActions>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              style={dialogStatus ? styles.expenseButton : styles.button}\n              onClick={() => handleChangeExpense()}\n            >\n              支出\n            </Button>\n            <Button\n              variant=\"outlined\"\n              style={dialogStatus ? styles.button : styles.incomeButton}\n              onClick={() => handleChangeIncome()}\n            >\n              収入\n            </Button>\n          </Grid>\n        </Grid>\n        <DialogContent>\n          <Title\n            autoFocus\n            fullWidth\n            placeholder=\"金額\"\n            value={amount}\n            onChange={(e) => {\n              handleAmountValue(e.target.value);\n            }}\n          />\n          <Grid\n            container\n            spacing={1}\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <CategoryOutlined />\n            </Grid>\n            {select}\n          </Grid>\n          <Grid\n            container\n            spacing={1}\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <NoteOutlined />\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                style={spacer}\n                fullWidth\n                placeholder=\"メモ\"\n                value={details}\n                onChange={(e) => {\n                  handleDetailsValue(e.target.value);\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            spacing={1}\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <AccessTime />\n            </Grid>\n            <Grid item xs={10}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DatePicker\n                  value={date}\n                  onChange={(d) => handleDateValue(d)}\n                  variant=\"inline\"\n                  format=\"yyyy年M月d日\"\n                  animateYearScrolling\n                  disableToolbar\n                  fullWidth\n                  style={spacer}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            style={styles.saveButton}\n            variant=\"outlined\"\n            onClick={() => handleSaveData()}\n          >\n            保存\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n);\n\nexport default AddScheduleDialog;\n","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/reportWebVitals.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/index.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/PiePlot.tsx",["104"],"import React, { useEffect, useState } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectDataDaily, fetchDataDaily } from \"../store/piePlotSlice\";\nimport MoneyData from \"../components/MoneyData\";\nimport Month from \"../components/Month\";\nimport dayjs from \"dayjs\";\nimport { fetchMoneyData } from \"../store/moneyDataSlice\";\n\nconst PiePlot: React.FC = () => {\n  const dataDaily = useSelector(selectDataDaily);\n  const [amount, setAmount] = useState<Array<number>>([]);\n  const [userNum, setUserNum] = useState(\"abcde\");\n  const [year, setYear] = useState(dayjs().year());\n  const [month, setMonth] = useState(dayjs().month() + 1);\n\n  const onClickPreviousMonth = () => {\n    const day = dayjs(`${year}-${month}`).add(-1, \"month\");\n    setYear(day.year());\n    setMonth(day.month() + 1);\n    setArg({ userNum: userNum, year: day.year(), month: day.month() + 1 });\n  };\n\n  const onClickNextMonth = () => {\n    const day = dayjs(`${year}-${month}`).add(1, \"month\");\n    console.log(day);\n    setYear(day.year());\n    setMonth(day.month() + 1);\n    setArg({ userNum: userNum, year: day.year(), month: day.month() + 1 });\n  };\n\n  const dispatch = useDispatch();\n  const [arg, setArg] = useState<{\n    userNum: string;\n    year: number;\n    month: number;\n  }>({ userNum: userNum, year: year, month: month });\n\n  useEffect(() => {\n    // console.log(arg.month);\n    dispatch(fetchDataDaily(arg));\n    dispatch(fetchMoneyData(arg));\n  }, [dispatch, arg]);\n\n  //PieChart\n  const createPiePlotData = (amount: Array<number>) => {\n    let data = {\n      labels: [\"Windows\", \"Mac\", \"Linux\"],\n      datasets: [\n        {\n          data: amount,\n          backgroundColor: [\"#4169e1\", \"#ff1493\", \"#FFCE56\"],\n          hoverBackgroundColor: [\"#36A2EB\", \"#FF6384\", \"#FFCE56\"],\n          borderColor: [\"transparent\", \"transparent\", \"transparent\"],\n        },\n      ],\n    };\n    return data;\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: false,\n    legend: { display: true },\n  };\n  const [piePlotData, setPiePlotData] = useState(createPiePlotData(amount));\n\n  useEffect(() => {\n    setAmount(dataDaily);\n  }, [dataDaily]);\n\n  useEffect(() => {\n    setPiePlotData(createPiePlotData(amount));\n  }, [amount]);\n\n  return (\n    <div>\n      <Month\n        onClickNextMonth={onClickNextMonth}\n        onClickPreviousMonth={onClickPreviousMonth}\n        year={arg.year}\n        month={arg.month}\n      />\n      <Pie data={piePlotData} options={options} width={300} height={300} />\n      <MoneyData />\n    </div>\n  );\n};\n\nexport default PiePlot;\n","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Main.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/piePlotSlice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/moneyDataSlice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/calendar/slice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/addSchedule/slice.ts",["105"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/currentSchedule/slice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarBoard/index.tsx",["106"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Month.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/calendar.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/schedule.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/income.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarElement/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/income.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/edit.tsx",["107","108","109","110","111","112","113","114","115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":81,"column":21,"nodeType":"123","messageId":"124","endLine":81,"endColumn":30},{"ruleId":"121","severity":1,"message":"125","line":13,"column":19,"nodeType":"123","messageId":"124","endLine":13,"endColumn":29},{"ruleId":"121","severity":1,"message":"126","line":9,"column":10,"nodeType":"123","messageId":"124","endLine":9,"endColumn":16},{"ruleId":"121","severity":1,"message":"125","line":93,"column":19,"nodeType":"123","messageId":"124","endLine":93,"endColumn":29},{"ruleId":"121","severity":1,"message":"127","line":27,"column":3,"nodeType":"123","messageId":"124","endLine":27,"endColumn":13},{"ruleId":"121","severity":1,"message":"128","line":30,"column":23,"nodeType":"123","messageId":"124","endLine":30,"endColumn":34},{"ruleId":"121","severity":1,"message":"129","line":32,"column":3,"nodeType":"123","messageId":"124","endLine":32,"endColumn":24},{"ruleId":"121","severity":1,"message":"130","line":33,"column":3,"nodeType":"123","messageId":"124","endLine":33,"endColumn":22},{"ruleId":"121","severity":1,"message":"131","line":35,"column":10,"nodeType":"123","messageId":"124","endLine":35,"endColumn":25},{"ruleId":"121","severity":1,"message":"132","line":35,"column":27,"nodeType":"123","messageId":"124","endLine":35,"endColumn":39},{"ruleId":"121","severity":1,"message":"122","line":117,"column":19,"nodeType":"123","messageId":"124","endLine":117,"endColumn":28},{"ruleId":"133","severity":1,"message":"134","line":197,"column":6,"nodeType":"135","endLine":197,"endColumn":58,"suggestions":"136"},{"ruleId":"121","severity":1,"message":"137","line":275,"column":10,"nodeType":"123","messageId":"124","endLine":275,"endColumn":19},{"ruleId":"133","severity":1,"message":"138","line":308,"column":6,"nodeType":"135","endLine":308,"endColumn":79,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"@typescript-eslint/no-unused-vars","'seUserNum' is assigned a value but never used.","Identifier","unusedVar","'setUserNum' is assigned a value but never used.","'access' is defined but never used.","'postIncome' is defined but never used.","'useSelector' is defined but never used.","'selectCurrentSchedule' is defined but never used.","'selectCurrentIncome' is defined but never used.","'selectSchedules' is defined but never used.","'selectIncome' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'expenseJenre', 'incomeJenre', 'newData', and 'newIncomeData'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSelect' needs the current value of 'expenseJenre'.","ArrayExpression",["142"],"'argIncome' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'incomeId' and 'moneyId'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setArg' needs the current value of 'moneyId'.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [currentData, currentIncome, ArrayData, ArrayIncome, newData, newIncomeData, expenseJenre, incomeJenre]",{"range":"148","text":"149"},"Update the dependencies array to be: [userNum, amount, expenseJenre, details, date, incomeJenre, dialogStatus, moneyId, incomeId]",{"range":"150","text":"151"},[5184,5236],"[currentData, currentIncome, ArrayData, ArrayIncome, newData, newIncomeData, expenseJenre, incomeJenre]",[7771,7844],"[userNum, amount, expenseJenre, details, date, incomeJenre, dialogStatus, moneyId, incomeId]"]