[{"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/index.tsx":"1","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/reportWebVitals.ts":"2","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/App.tsx":"3","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/index.ts":"4","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Main.tsx":"5","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Navigation/header.tsx":"6","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/PiePlot.tsx":"7","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/piePlotSlice.ts":"8","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/moneyDataSlice.ts":"9","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/totalAmountSlice.ts":"10","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/calendar/slice.ts":"11","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/currentSchedule/slice.ts":"12","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/addSchedule/slice.ts":"13","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarBoard/index.tsx":"14","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Month.tsx":"15","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/TotalAmount.tsx":"16","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/calendar.ts":"17","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/schedule.ts":"18","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/edit.tsx":"19","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/income.tsx":"20","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/index.tsx":"21","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/index.tsx":"22","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarElement/index.tsx":"23","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/income.tsx":"24","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/index.tsx":"25","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData/SwitchButton.tsx":"26","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/EditTable.tsx":"27","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData/MoneyData.tsx":"28","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/incomeEdit.tsx":"29","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/EditIncome.tsx":"30"},{"size":571,"mtime":1612858939573,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1612858858304,"results":"33","hashOfConfig":"32"},{"size":1255,"mtime":1613442961523,"results":"34","hashOfConfig":"35"},{"size":1040,"mtime":1613439459775,"results":"36","hashOfConfig":"35"},{"size":595,"mtime":1613376163507,"results":"37","hashOfConfig":"35"},{"size":1514,"mtime":1613376237918,"results":"38","hashOfConfig":"32"},{"size":3053,"mtime":1613467956920,"results":"39","hashOfConfig":"32"},{"size":2169,"mtime":1612858939574,"results":"40","hashOfConfig":"32"},{"size":5939,"mtime":1613467956921,"results":"41","hashOfConfig":"32"},{"size":2531,"mtime":1613439459775,"results":"42","hashOfConfig":"35"},{"size":692,"mtime":1612862805329,"results":"43","hashOfConfig":"32"},{"size":1600,"mtime":1612943943722,"results":"44","hashOfConfig":"32"},{"size":6839,"mtime":1613457185532,"results":"45","hashOfConfig":"32"},{"size":8321,"mtime":1613469561167,"results":"46","hashOfConfig":"32"},{"size":1105,"mtime":1612859162409,"results":"47","hashOfConfig":"32"},{"size":1052,"mtime":1613439459774,"results":"48","hashOfConfig":"32"},{"size":1981,"mtime":1612860390430,"results":"49","hashOfConfig":"32"},{"size":780,"mtime":1612939977442,"results":"50","hashOfConfig":"35"},{"size":7030,"mtime":1613457148473,"results":"51","hashOfConfig":"32"},{"size":4138,"mtime":1613443039647,"results":"52","hashOfConfig":"35"},{"size":4111,"mtime":1613442346698,"results":"53","hashOfConfig":"35"},{"size":9850,"mtime":1613439515357,"results":"54","hashOfConfig":"35"},{"size":2754,"mtime":1613469743858,"results":"55","hashOfConfig":"32"},{"size":771,"mtime":1613470210788,"results":"56","hashOfConfig":"32"},{"size":775,"mtime":1613366358481,"results":"57","hashOfConfig":"32"},{"size":4153,"mtime":1613467956920,"results":"58","hashOfConfig":"32"},{"size":6013,"mtime":1613467956918,"results":"59","hashOfConfig":"32"},{"size":1779,"mtime":1613456151621,"results":"60","hashOfConfig":"32"},{"size":6997,"mtime":1613457664845,"results":"61","hashOfConfig":"32"},{"size":6004,"mtime":1613469346272,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"bapnxl",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"mi9w08",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"89"},"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/index.tsx",[],["128","129"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/reportWebVitals.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/App.tsx",[],["130","131"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/index.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Main.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Navigation/header.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/PiePlot.tsx",["132"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/piePlotSlice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/moneyDataSlice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/store/totalAmountSlice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/calendar/slice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/currentSchedule/slice.ts",[],["133","134"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/redux/addSchedule/slice.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarBoard/index.tsx",["135","136"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Month.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/TotalAmount.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/calendar.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/services/schedule.ts",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/edit.tsx",["137","138","139","140"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/income.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CurrentScheduleDialog/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/index.tsx",["141"],"import React, { useEffect, useCallback, useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  Input,\n  Grid,\n  Select,\n  MenuItem,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  CategoryOutlined,\n  NoteOutlined,\n  AccessTime,\n  Close,\n} from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport dayjs from \"dayjs\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { fetchMoneyData, postIncome } from \"../../redux/addSchedule/slice\";\nimport { useDispatch } from \"react-redux\";\n\nconst spacer = { margin: \"4px, 0\" };\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  closeButton: {\n    textAlign: \"right\",\n  },\n  expenseButton: {\n    backgroundColor: \"#F08080\",\n  },\n  incomeButton: {\n    backgroundColor: \"rgb(121, 134, 203)\",\n  },\n  saveButton: {\n    backgroundColor: \"#87CEFA\",\n  },\n  button: {\n    backgroundColor: \"#FFFFFF\",\n    color: \"#4169E1\",\n    border: \"1px solid #4169E1\",\n  },\n};\n\nconst Title = withStyles({\n  root: { marginBottom: 32, fontSize: 22 },\n})(Input);\n\ntype Props = { newDate: dayjs.Dayjs; isOpen: boolean; doClose: () => void };\n\nexport type AddItemType = {\n  userNum: string;\n  amount: number;\n  jenre: string;\n  details: string;\n  date: dayjs.Dayjs | null;\n};\n\nexport type AddIncomeType = {\n  userNum: string;\n  income: number;\n  jenre: string;\n  details: string;\n  date: dayjs.Dayjs | null;\n};\n\n//金額入力フォーム\nconst AddScheduleDialog: React.FC<Props> = React.memo(\n  function AddScheduleDialog(props) {\n    const { newDate, isOpen, doClose } = props;\n\n    const [amount, setAmount] = useState(0);\n    const [expenseJenre, setExpenseJenre] = useState(\"食費\");\n    const [incomeJenre, setIncomeJenre] = useState(\"給料\");\n    const [details, setDetails] = useState(\"\");\n    const [date, setDate] = useState<dayjs.Dayjs | null>(dayjs());\n    const [userNum, seUserNum] = useState<string>(\"abc\");\n    const [dialogStatus, setDialogStatus] = useState(true);\n    const [select, setSelect] = useState(\n      <Grid item xs={10}>\n        <Select\n          value={expenseJenre}\n          onChange={(e) => {\n            handleExpenseJenreValue(e.target.value as string);\n          }}\n          fullWidth\n          autoFocus\n        >\n          <MenuItem value=\"食費\">食費</MenuItem>\n          <MenuItem value=\"日用品\">日用品</MenuItem>\n          <MenuItem value=\"衣服\">衣服</MenuItem>\n          <MenuItem value=\"交通費\">交通費</MenuItem>\n          <MenuItem value=\"その他\">その他</MenuItem>\n        </Select>\n      </Grid>\n    );\n\n    useEffect(() => {\n      setDate(newDate);\n    }, [newDate]);\n\n    //金額をセット\n    const handleAmountValue = (value: string) => {\n      setAmount(Number(value));\n    };\n    //カテゴリーをセット\n    const handleExpenseJenreValue = (value: string) => {\n      setExpenseJenre(value);\n    };\n    const handleIncomeJenreValue = (value: string) => {\n      setIncomeJenre(value);\n    };\n    //メモをセット\n    const handleDetailsValue = (value: string) => {\n      setDetails(value);\n    };\n    // //日付をセット\n    const handleDateValue = (value: Date | null) => {\n      let newDay = null;\n      if (value != null) {\n        newDay = dayjs(value);\n      }\n      setDate(newDay);\n    };\n\n    const handleChangeExpense = useCallback(() => {\n      setDialogStatus(true);\n      setSelect(\n        <Grid item xs={10}>\n          <Select\n            value={expenseJenre}\n            onChange={(e) => {\n              handleExpenseJenreValue(e.target.value as string);\n            }}\n            fullWidth\n            autoFocus\n          >\n            <MenuItem value=\"食費\">食費</MenuItem>\n            <MenuItem value=\"日用品\">日用品</MenuItem>\n            <MenuItem value=\"衣服\">衣服</MenuItem>\n            <MenuItem value=\"交通費\">交通費</MenuItem>\n            <MenuItem value=\"その他\">その他</MenuItem>\n          </Select>\n        </Grid>\n      );\n    }, [expenseJenre]);\n\n    const handleChangeIncome = useCallback(() => {\n      setDialogStatus(false);\n      setSelect(\n        <Grid item xs={10}>\n          <Select\n            value={incomeJenre}\n            onChange={(e) => {\n              handleIncomeJenreValue(e.target.value as string);\n            }}\n            fullWidth\n            autoFocus\n          >\n            <MenuItem value=\"給料\">給料</MenuItem>\n            <MenuItem value=\"その他\">その他</MenuItem>\n          </Select>\n        </Grid>\n      );\n    }, [incomeJenre]);\n\n    const [arg, setArg] = useState<AddItemType>({\n      userNum: \"\",\n      amount: 0,\n      jenre: \"\",\n      details: \"\",\n      date: dayjs(),\n    });\n\n    const [argIncome, setArgIncome] = useState<AddIncomeType>({\n      userNum: \"\",\n      income: 0,\n      jenre: \"\",\n      details: \"\",\n      date: dayjs(),\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      if (date != null && dialogStatus === true) {\n        setArg({\n          userNum: userNum,\n          amount: amount,\n          jenre: expenseJenre,\n          details: details,\n          date: date,\n        });\n      } else {\n        setArgIncome({\n          userNum: userNum,\n          income: amount,\n          jenre: incomeJenre,\n          details: details,\n          date: date,\n        });\n      }\n    }, [\n      userNum,\n      amount,\n      expenseJenre,\n      details,\n      date,\n      incomeJenre,\n      dialogStatus,\n    ]);\n\n    const handleSaveData = () => {\n      if (dialogStatus) {\n        dispatch(fetchMoneyData(arg));\n      } else {\n        dispatch(postIncome(argIncome));\n      }\n\n      doClose();\n\n      setAmount(0);\n      setExpenseJenre(\"食費\");\n      setIncomeJenre(\"給料\");\n      setDetails(\"\");\n      setDate(newDate);\n    };\n\n    const handleClose = () => {\n      setDialogStatus(true);\n\n      doClose();\n\n      setAmount(0);\n      setExpenseJenre(\"食費\");\n      setIncomeJenre(\"給料\");\n      setDetails(\"\");\n      setDate(newDate);\n      setSelect(\n        <Grid item xs={10}>\n          <Select\n            value={expenseJenre}\n            onChange={(e) => {\n              handleExpenseJenreValue(e.target.value as string);\n            }}\n            fullWidth\n            autoFocus\n          >\n            <MenuItem value=\"食費\">食費</MenuItem>\n            <MenuItem value=\"日用品\">日用品</MenuItem>\n            <MenuItem value=\"衣服\">衣服</MenuItem>\n            <MenuItem value=\"交通費\">交通費</MenuItem>\n            <MenuItem value=\"その他\">その他</MenuItem>\n          </Select>\n        </Grid>\n      );\n    };\n\n    // if (process.env.NODE_ENV !== \"production\") {\n    //   const { whyDidYouUpdate } = require(\"why-did-you-update\");\n    //   whyDidYouUpdate(React);\n    // }\n    return (\n      <Dialog open={isOpen} onClose={handleClose} maxWidth=\"xs\" fullWidth>\n        <DialogActions>\n          <div style={styles.closeButton}>\n            <IconButton onClick={handleClose} size=\"small\">\n              <Close />\n            </IconButton>\n          </div>\n        </DialogActions>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <Button\n              variant=\"outlined\"\n              style={dialogStatus ? styles.expenseButton : styles.button}\n              onClick={() => handleChangeExpense()}\n            >\n              支出\n            </Button>\n            <Button\n              variant=\"outlined\"\n              style={dialogStatus ? styles.button : styles.incomeButton}\n              onClick={() => handleChangeIncome()}\n            >\n              収入\n            </Button>\n          </Grid>\n        </Grid>\n        <DialogContent>\n          <Title\n            autoFocus\n            fullWidth\n            placeholder=\"金額\"\n            value={amount}\n            onChange={(e) => {\n              handleAmountValue(e.target.value);\n            }}\n          />\n          <Grid\n            container\n            spacing={1}\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <CategoryOutlined />\n            </Grid>\n            {select}\n          </Grid>\n          <Grid\n            container\n            spacing={1}\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <NoteOutlined />\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                style={spacer}\n                fullWidth\n                placeholder=\"メモ\"\n                value={details}\n                onChange={(e) => {\n                  handleDetailsValue(e.target.value);\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            spacing={1}\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item>\n              <AccessTime />\n            </Grid>\n            <Grid item xs={10}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DatePicker\n                  value={date}\n                  onChange={(d) => handleDateValue(d)}\n                  variant=\"inline\"\n                  format=\"yyyy年M月d日\"\n                  animateYearScrolling\n                  disableToolbar\n                  fullWidth\n                  style={spacer}\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            style={styles.saveButton}\n            variant=\"outlined\"\n            onClick={() => handleSaveData()}\n          >\n            保存\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n);\n\nexport default AddScheduleDialog;\n","/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/CalendarElement/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/income.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/Schedule/index.tsx",[],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData/SwitchButton.tsx",["142","143","144"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/EditTable.tsx",["145","146","147","148"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/MoneyData/MoneyData.tsx",["149"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/AddScheduleDialog/incomeEdit.tsx",["150","151","152","153","154","155"],"/Users/kajiyamamiyu/Downloads/React App/Money-management/src/components/EditIncome.tsx",["156","157","158"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  Input,\n  Grid,\n  Select,\n  MenuItem,\n  IconButton,\n} from \"@material-ui/core\";\nimport {\n  CategoryOutlined,\n  NoteOutlined,\n  AccessTime,\n  Delete,\n  Close,\n} from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport dayjs from \"dayjs\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  deleteIncome,\n  fetchUpdateData,\n  fetchUpdateIncome,\n} from \"../store/moneyDataSlice\";\nimport { EditItemType } from \"../components/AddScheduleDialog/edit\";\nimport { EditIncomeType } from \"./AddScheduleDialog/incomeEdit\";\nconst spacer = { margin: \"4px, 0\" };\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  closeButton: {\n    textAlign: \"right\",\n  },\n};\n\nconst Title = withStyles({\n  root: { marginBottom: 32, fontSize: 22 },\n})(Input);\n\ntype Props = {\n  newDate: dayjs.Dayjs | null;\n  isOpen: boolean;\n  doClose: () => void;\n  moneyInfo: EditItemType;\n};\n\nconst EditIncome: React.FC<Props> = (props) => {\n  const { isOpen, doClose, moneyInfo } = props;\n  const [moneyId, setMoneyId] = useState(moneyInfo.moneyId);\n  const [amount, setAmount] = useState(moneyInfo.amount);\n  const [jenre, setJenre] = useState(moneyInfo.jenre);\n  const [details, setDetails] = useState(moneyInfo.details);\n  const [date, setDate] = useState<dayjs.Dayjs | null>(moneyInfo.date);\n  const [userNum, seUserNum] = useState<string>(\"abcde\");\n\n  useEffect(() => {\n    setMoneyId(moneyInfo.moneyId);\n    setAmount(moneyInfo.amount);\n    setJenre(moneyInfo.jenre);\n    setDetails(moneyInfo.details);\n    setDate(moneyInfo.date);\n  }, [\n    moneyInfo.amount,\n    moneyInfo.jenre,\n    moneyInfo.details,\n    moneyInfo.date,\n    moneyInfo.moneyId,\n  ]);\n\n  //金額をセット\n  const handleAmountValue = (value: string) => {\n    setAmount(Number(value));\n  };\n  //カテゴリーをセット\n  const handleJenreValue = (value: string) => {\n    setJenre(value);\n  };\n  //メモをセット\n  const handleDetailsValue = (value: string) => {\n    setDetails(value);\n  };\n  // //日付をセット\n  const handleDateValue = (value: Date | null) => {\n    let newDay = null;\n    if (value != null) {\n      newDay = dayjs(value);\n    }\n    setDate(newDay);\n  };\n\n  const [arg, setArg] = useState<EditItemType>({\n    moneyId: 0,\n    userNum: \"\",\n    amount: 0,\n    jenre: \"\",\n    details: \"\",\n    date: dayjs(),\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (date != null) {\n      setArg({\n        moneyId: moneyId,\n        userNum: userNum,\n        amount: amount,\n        jenre: jenre,\n        details: details,\n        date: date,\n      });\n    }\n  }, [moneyId, userNum, amount, jenre, details, date]);\n\n  const handleSaveData = () => {\n    setArg({\n      moneyId: moneyId,\n      userNum: userNum,\n      amount: amount,\n      jenre: jenre,\n      details: details,\n      date: date!,\n    });\n\n    dispatch(fetchUpdateIncome(arg));\n\n    doClose();\n  };\n\n  //削除の処理\n  const handleDeteleSchedule = () => {\n    dispatch(deleteIncome(arg));\n    doClose();\n  };\n\n  return (\n    <Dialog open={isOpen} onClose={doClose} maxWidth=\"xs\" fullWidth>\n      <DialogActions>\n        <IconButton onClick={handleDeteleSchedule} size=\"small\">\n          <Delete />\n        </IconButton>\n        <div style={styles.closeButton}>\n          <IconButton onClick={doClose} size=\"small\">\n            <Close />\n          </IconButton>\n        </div>\n      </DialogActions>\n      <DialogContent>\n        <Title\n          autoFocus\n          fullWidth\n          placeholder=\"金額\"\n          value={amount}\n          onChange={(e) => {\n            handleAmountValue(e.target.value);\n          }}\n        />\n        <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <CategoryOutlined />\n          </Grid>\n          <Grid item xs={10}>\n            <Select\n              value={jenre}\n              onChange={(e) => {\n                handleJenreValue(e.target.value as string);\n              }}\n              fullWidth\n              autoFocus\n            >\n              <MenuItem value=\"食費\">食費</MenuItem>\n              <MenuItem value=\"日用品\">日用品</MenuItem>\n              <MenuItem value=\"衣服\">衣服</MenuItem>\n              <MenuItem value=\"交通費\">交通費</MenuItem>\n              <MenuItem value=\"その他\">その他</MenuItem>\n            </Select>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <NoteOutlined />\n          </Grid>\n          <Grid item xs={10}>\n            <TextField\n              style={spacer}\n              fullWidth\n              placeholder=\"メモ\"\n              value={details}\n              onChange={(e) => {\n                handleDetailsValue(e.target.value);\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <AccessTime />\n          </Grid>\n          <Grid item xs={10}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                value={date}\n                onChange={(d) => handleDateValue(d)}\n                variant=\"inline\"\n                format=\"yyyy年M月d日\"\n                animateYearScrolling\n                disableToolbar\n                fullWidth\n                style={spacer}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => handleSaveData()}\n        >\n          保存\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditIncome;\n",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":13,"column":19,"nodeType":"167","messageId":"168","endLine":13,"endColumn":29},{"ruleId":"159","replacedBy":"169"},{"ruleId":"161","replacedBy":"170"},{"ruleId":"165","severity":1,"message":"166","line":94,"column":19,"nodeType":"167","messageId":"168","endLine":94,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":125,"column":5,"nodeType":"173","endLine":125,"endColumn":7,"suggestions":"174"},{"ruleId":"165","severity":1,"message":"175","line":81,"column":19,"nodeType":"167","messageId":"168","endLine":81,"endColumn":28},{"ruleId":"171","severity":1,"message":"176","line":96,"column":6,"nodeType":"173","endLine":96,"endColumn":30,"suggestions":"177"},{"ruleId":"171","severity":1,"message":"178","line":141,"column":6,"nodeType":"173","endLine":141,"endColumn":52,"suggestions":"179"},{"ruleId":"171","severity":1,"message":"180","line":171,"column":6,"nodeType":"173","endLine":171,"endColumn":38,"suggestions":"181"},{"ruleId":"165","severity":1,"message":"175","line":81,"column":21,"nodeType":"167","messageId":"168","endLine":81,"endColumn":30},{"ruleId":"165","severity":1,"message":"182","line":18,"column":22,"nodeType":"167","messageId":"168","endLine":18,"endColumn":35},{"ruleId":"165","severity":1,"message":"183","line":20,"column":10,"nodeType":"167","messageId":"168","endLine":20,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":20,"column":19,"nodeType":"167","messageId":"168","endLine":20,"endColumn":29},{"ruleId":"165","severity":1,"message":"184","line":1,"column":38,"nodeType":"167","messageId":"168","endLine":1,"endColumn":45},{"ruleId":"165","severity":1,"message":"185","line":25,"column":23,"nodeType":"167","messageId":"168","endLine":25,"endColumn":34},{"ruleId":"165","severity":1,"message":"186","line":29,"column":3,"nodeType":"167","messageId":"168","endLine":29,"endColumn":18},{"ruleId":"165","severity":1,"message":"175","line":58,"column":19,"nodeType":"167","messageId":"168","endLine":58,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":12,"column":19,"nodeType":"167","messageId":"168","endLine":12,"endColumn":29},{"ruleId":"165","severity":1,"message":"187","line":26,"column":3,"nodeType":"167","messageId":"168","endLine":26,"endColumn":16},{"ruleId":"165","severity":1,"message":"175","line":87,"column":19,"nodeType":"167","messageId":"168","endLine":87,"endColumn":28},{"ruleId":"165","severity":1,"message":"188","line":88,"column":24,"nodeType":"167","messageId":"168","endLine":88,"endColumn":39},{"ruleId":"171","severity":1,"message":"176","line":102,"column":6,"nodeType":"173","endLine":102,"endColumn":42,"suggestions":"189"},{"ruleId":"171","severity":1,"message":"190","line":146,"column":6,"nodeType":"173","endLine":146,"endColumn":65,"suggestions":"191"},{"ruleId":"171","severity":1,"message":"192","line":176,"column":6,"nodeType":"173","endLine":176,"endColumn":37,"suggestions":"193"},{"ruleId":"165","severity":1,"message":"194","line":28,"column":3,"nodeType":"167","messageId":"168","endLine":28,"endColumn":18},{"ruleId":"165","severity":1,"message":"195","line":32,"column":10,"nodeType":"167","messageId":"168","endLine":32,"endColumn":24},{"ruleId":"165","severity":1,"message":"175","line":59,"column":19,"nodeType":"167","messageId":"168","endLine":59,"endColumn":28},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],["196"],["197"],"@typescript-eslint/no-unused-vars","'setUserNum' is assigned a value but never used.","Identifier","unusedVar",["196"],["197"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'seUserNum' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newData'. Either include it or remove the dependency array.",["199"],"React Hook useEffect has a missing dependency: 'moneyId'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setArg' needs the current value of 'moneyId'.",["200"],"React Hook useCallback has an unnecessary dependency: 'expenseJenre'. Either exclude it or remove the dependency array.",["201"],"'setChangeDate' is assigned a value but never used.","'userNum' is assigned a value but never used.","'useMemo' is defined but never used.","'useSelector' is defined but never used.","'selectMoneyData' is defined but never used.","'updateExpense' is defined but never used.","'setDialogStatus' is assigned a value but never used.",["202"],"React Hook useEffect has a missing dependency: 'incomeId'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setArgIncome' needs the current value of 'incomeId'.",["203"],"React Hook useCallback has an unnecessary dependency: 'incomeJenre'. Either exclude it or remove the dependency array.",["204"],"'fetchUpdateData' is defined but never used.","'EditIncomeType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"211","fix":"217"},"Update the dependencies array to be: [dispatch]",{"range":"218","text":"219"},"Update the dependencies array to be: [currentData, ArrayData, newData]",{"range":"220","text":"221"},"Update the dependencies array to be: [userNum, amount, expenseJenre, details, date, moneyId]",{"range":"222","text":"223"},"Update the dependencies array to be: [doClose, newData]",{"range":"224","text":"225"},"Update the dependencies array to be: [currentIncomeData, ArrayIncomeData, newData]",{"range":"226","text":"227"},"Update the dependencies array to be: [userNum, amount, details, date, incomeJenre, dialogStatus, incomeId]",{"range":"228","text":"229"},{"range":"230","text":"225"},[3551,3553],"[dispatch]",[2348,2372],"[currentData, ArrayData, newData]",[3240,3286],"[userNum, amount, expenseJenre, details, date, moneyId]",[3890,3922],"[doClose, newData]",[2453,2489],"[currentIncomeData, ArrayIncomeData, newData]",[3376,3435],"[userNum, amount, details, date, incomeJenre, dialogStatus, incomeId]",[4042,4073]]